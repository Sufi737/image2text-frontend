{"ast":null,"code":"var _jsxFileName = \"/home/sufyan/spring-boot-project/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ImageUpload from './ImageUpload.js';\nimport ShowImageText from './ShowImageText.js';\nimport Selector from './Selector';\nimport ShowUrls from './ShowUrls';\nimport DetectedLanguages from './DetectedLanguages';\nimport UploadButton from './UploadButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setResponse = responseObject => {\n      this.setState({\n        imageText: responseObject.data.text[0],\n        urlList: responseObject.data.url,\n        languages: responseObject.data.detected_languages.join(\",\")\n      });\n    };\n\n    this.setSelectedValue = (type, value) => {\n      let copySelectedValues = { ...this.state.selectedValues\n      };\n      copySelectedValues[type] = value;\n      this.setState({\n        selectedValues: copySelectedValues\n      });\n    };\n\n    this.setImage = uploadedImage => {\n      this.setState({\n        image: uploadedImage\n      });\n    };\n\n    this.setResponse = this.setResponse.bind(this);\n    this.state = {\n      imageText: null,\n      urlList: null,\n      languages: null,\n      image: null,\n      selectedValues: {\n        \"text\": false,\n        \"url\": false,\n        \"detect_language\": false\n      }\n    };\n  }\n\n  render() {\n    // const imageText = this.state.imageText\n    // return (\n    //     <div className=\"main\">\n    //         <ImageUpload  setImage={this.setImage}/>\n    //         <ShowImageText text={this.state.imageText}/>\n    //         <ShowUrls urlList={this.state.urlList}/>\n    //         <DetectedLanguages languages={this.state.languages}/>\n    //         <Selector type=\"text\" \n    //           label={\"Extract Text\"} \n    //           setSelectedValue={this.setSelectedValue}\n    //         />\n    //         <Selector \n    //           type=\"url\" \n    //           label={\"Extract URL(s)\"} \n    //           setSelectedValue={this.setSelectedValue}\n    //         />\n    //         <Selector \n    //           type=\"detect_language\" \n    //           label={\"Identify Language(s)\"} \n    //           setSelectedValue={this.setSelectedValue}\n    //         />\n    //         <UploadButton \n    //           image={this.state.image} \n    //           selectedOptions={this.state.selectedValues} \n    //           setResponse={this.setResponse}\n    //         />\n    //     </div>\n    // );\n\n    /*#__PURE__*/\n    _jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","ImageUpload","ShowImageText","Selector","ShowUrls","DetectedLanguages","UploadButton","App","Component","constructor","props","setResponse","responseObject","setState","imageText","data","text","urlList","url","languages","detected_languages","join","setSelectedValue","type","value","copySelectedValues","state","selectedValues","setImage","uploadedImage","image","bind","render"],"sources":["/home/sufyan/spring-boot-project/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport ImageUpload from './ImageUpload.js';\nimport ShowImageText from './ShowImageText.js';\nimport Selector from './Selector';\nimport ShowUrls from './ShowUrls';\nimport DetectedLanguages from './DetectedLanguages';\nimport UploadButton from './UploadButton';\n\nclass App extends React.Component{\n\n    constructor (props) {\n      super (props)\n      this.setResponse = this.setResponse.bind(this)\n      this.state = {\n        imageText: null,\n        urlList: null,\n        languages: null,\n        image: null,\n        selectedValues: {\n            \"text\": false,\n            \"url\": false,\n            \"detect_language\": false\n        }\n      }\n    }\n\n    setResponse = (responseObject) => {\n        this.setState({\n            imageText: responseObject.data.text[0],\n            urlList: responseObject.data.url,\n            languages: responseObject.data.detected_languages.join(\",\")\n        })\n    }\n\n    setSelectedValue = (type, value) => {\n        let copySelectedValues = { ...this.state.selectedValues}\n        copySelectedValues[type] = value\n        this.setState({selectedValues: copySelectedValues})\n    }\n\n    setImage = (uploadedImage) => {\n      this.setState({image: uploadedImage})\n    }\n    \n    render() {\n        // const imageText = this.state.imageText\n        // return (\n        //     <div className=\"main\">\n        //         <ImageUpload  setImage={this.setImage}/>\n        //         <ShowImageText text={this.state.imageText}/>\n        //         <ShowUrls urlList={this.state.urlList}/>\n        //         <DetectedLanguages languages={this.state.languages}/>\n        //         <Selector type=\"text\" \n        //           label={\"Extract Text\"} \n        //           setSelectedValue={this.setSelectedValue}\n        //         />\n        //         <Selector \n        //           type=\"url\" \n        //           label={\"Extract URL(s)\"} \n        //           setSelectedValue={this.setSelectedValue}\n        //         />\n        //         <Selector \n        //           type=\"detect_language\" \n        //           label={\"Identify Language(s)\"} \n        //           setSelectedValue={this.setSelectedValue}\n        //         />\n        //         <UploadButton \n        //           image={this.state.image} \n        //           selectedOptions={this.state.selectedValues} \n        //           setResponse={this.setResponse}\n        //         />\n        //     </div>\n        // );\n\n        <Router>\n          <Route path='/' element={<Home />} />\n        </Router>\n    }\n    \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAiC;EAE7BC,WAAW,CAAEC,KAAF,EAAS;IAClB,MAAOA,KAAP;;IADkB,KAgBpBC,WAhBoB,GAgBLC,cAAD,IAAoB;MAC9B,KAAKC,QAAL,CAAc;QACVC,SAAS,EAAEF,cAAc,CAACG,IAAf,CAAoBC,IAApB,CAAyB,CAAzB,CADD;QAEVC,OAAO,EAAEL,cAAc,CAACG,IAAf,CAAoBG,GAFnB;QAGVC,SAAS,EAAEP,cAAc,CAACG,IAAf,CAAoBK,kBAApB,CAAuCC,IAAvC,CAA4C,GAA5C;MAHD,CAAd;IAKH,CAtBmB;;IAAA,KAwBpBC,gBAxBoB,GAwBD,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAChC,IAAIC,kBAAkB,GAAG,EAAE,GAAG,KAAKC,KAAL,CAAWC;MAAhB,CAAzB;MACAF,kBAAkB,CAACF,IAAD,CAAlB,GAA2BC,KAA3B;MACA,KAAKX,QAAL,CAAc;QAACc,cAAc,EAAEF;MAAjB,CAAd;IACH,CA5BmB;;IAAA,KA8BpBG,QA9BoB,GA8BRC,aAAD,IAAmB;MAC5B,KAAKhB,QAAL,CAAc;QAACiB,KAAK,EAAED;MAAR,CAAd;IACD,CAhCmB;;IAElB,KAAKlB,WAAL,GAAmB,KAAKA,WAAL,CAAiBoB,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKL,KAAL,GAAa;MACXZ,SAAS,EAAE,IADA;MAEXG,OAAO,EAAE,IAFE;MAGXE,SAAS,EAAE,IAHA;MAIXW,KAAK,EAAE,IAJI;MAKXH,cAAc,EAAE;QACZ,QAAQ,KADI;QAEZ,OAAO,KAFK;QAGZ,mBAAmB;MAHP;IALL,CAAb;EAWD;;EAoBDK,MAAM,GAAG;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IAAA,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAGH;;AArE4B;;AAyEjC,eAAezB,GAAf"},"metadata":{},"sourceType":"module"}
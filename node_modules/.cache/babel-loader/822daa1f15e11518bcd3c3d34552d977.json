{"ast":null,"code":"var _jsxFileName = \"/home/sufyan/spring-boot-project/frontend/src/ShowImageText.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowImageText extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"Copy\"\n    };\n  }\n\n  render() {\n    const imageText = this.props.text;\n\n    if (imageText) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"image-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            readOnly: true,\n            value: imageText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              navigator.clipboard.writeText(imageText);\n            },\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default ShowImageText;","map":{"version":3,"names":["React","ShowImageText","Component","constructor","props","state","text","render","imageText","navigator","clipboard","writeText"],"sources":["/home/sufyan/spring-boot-project/frontend/src/ShowImageText.js"],"sourcesContent":["import React from \"react\";\n\nclass ShowImageText extends React.Component {\n    constructor (props) {\n        super (props)\n        this.state = {\n          text: \"Copy\"\n        }\n      }\n\n    render() {\n        const imageText = this.props.text\n        if (imageText) {\n            return <div id=\"image-text\">\n                <div>\n                    <textarea readOnly value={imageText}/>\n                </div>\n                <div>\n                    <button \n                        onClick={() => \n                            {\n                                navigator.clipboard.writeText(imageText)\n\n                            }\n                        }\n                    >\n                        {text}\n                    </button>\n                </div>\n            </div>\n        }\n    }\n}\n\nexport default ShowImageText;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;EACxCC,WAAW,CAAEC,KAAF,EAAS;IAChB,MAAOA,KAAP;IACA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAE;IADK,CAAb;EAGD;;EAEHC,MAAM,GAAG;IACL,MAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWE,IAA7B;;IACA,IAAIE,SAAJ,EAAe;MACX,oBAAO;QAAK,EAAE,EAAC,YAAR;QAAA,wBACH;UAAA,uBACI;YAAU,QAAQ,MAAlB;YAAmB,KAAK,EAAEA;UAA1B;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADG,eAIH;UAAA,uBACI;YACI,OAAO,EAAE,MACL;cACIC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BH,SAA9B;YAEH,CALT;YAAA,UAQKF;UARL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAJG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IAiBH;EACJ;;AA7BuC;;AAgC5C,eAAeL,aAAf"},"metadata":{},"sourceType":"module"}